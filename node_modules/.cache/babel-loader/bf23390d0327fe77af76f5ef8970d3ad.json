{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh/Documents/Neog/emoji-interpretor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojiDictionary = {\n  \"😃\": \"Grinning Face with Big Eyes\",\n  \"😄\": \"Grinning Face with Smiling Eyes\",\n  \"😁\": \"Beaming Face with Smiling Eyes\",\n  \"😆\": \"Grinning Squinting Face\",\n  \"😅\": \"Grinning Face with Sweat\",\n  \"🤣\": \"Rolling on the Floor Laughing\",\n  \"😂\": \"Face with Tears of Joy\",\n  \"🙂\": \"Slightly Smiling Face\",\n  \"🙃\": \"Upside-Down Face\" // 😉 Winking Face\"\n  // 😊 Smiling Face with Smiling Eyes\n  // 😇 Smiling Face with Halo\n  // 🥰 Smiling Face with Hearts\n  // 😍 Smiling Face with Heart-Eyes\n  // 🤩 Star-Struck\n  // 😘 Face Blowing a Kiss\n  // 😗 Kissing Face\n  // ☺️ Smiling Face\n  // 😚 Kissing Face with Closed Eyes\n  // 😙 Kissing Face with Smiling Eyes\n  // 🥲 Smiling Face with Tear\n  // 😋 Face Savoring Food\n  // 😝 Squinting Face with Tongue\n  // 🤑 Money-Mouth Face\n  // 🤗 Hugging Face\n  // 🤭 Face with Hand Over Mouth\n  // 🤫 Shushing Face\n  // 🤔 Thinking Face\n  // 🤐 Zipper-Mouth Face\n  // 🤨 Face with Raised Eyebrow\n  // 😐 Neutral Face\n  // 😑 Expressionless Face\n  // 😶 Face Without Mouth\n  // 😶‍🌫️ Face in Clouds\n  // 😏 Smirking Face\n  // 😒 Unamused Face\n  // 🙄 Face with Rolling Eyes\n  // 😬 Grimacing Face\n  // 😮‍💨 Face Exhaling\n  // 🤥 Lying Face\n  // 😌 Relieved Face\n  // 😔 Pensive Face\n  // 😪 Sleepy Face\n  // 🤤 Drooling Face\n  // 😴 Sleeping Face\n  // 😷 Face with Medical Mask\n  // 🤒 Face with Thermometer\n  // 🤕 Face with Head-Bandage\n  // 🤢 Nauseated Face\n  // 🤮 Face Vomiting\n  // 🤧 Sneezing Face\n  // 🥵 Hot Face\n  // 🥶 Cold Face\n  // 🥴 Woozy Face\n  // 😵 Dizzy Face\n\n};\nvar knownEmojis = Object.keys(emojiDictionary);\nexport default function App() {\n  _s();\n\n  var [meaning, setMeaning] = useState(\"\");\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n    var meaning = emojiDictionary[userInput]; // console.log(meaning);\n\n    if (meaning == undefined) {\n      meaning = \"We dont have this in our database\";\n    }\n\n    setMeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      id: \"github-repo\",\n      title: \"Source code for this app\",\n      href: \"https://github.com/bishnoimukesh\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fab fa-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emoji Meaning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: emojiInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mean\",\n      children: [\" \", meaning, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), knownEmojis.map(function (emoji) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => emojiClickHandler(emoji),\n        style: {\n          fontSize: \"2rem\",\n          padding: \"0.5rem\",\n          cursor: \"pointer\"\n        },\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"D3EHYk/guY72sUVf/VpVxg+5wZI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mukesh/Documents/Neog/emoji-interpretor/src/App.js"],"names":["useState","emojiDictionary","knownEmojis","Object","keys","App","meaning","setMeaning","emojiInputHandler","event","userInput","target","value","undefined","emojiClickHandler","emoji","map","fontSize","padding","cursor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,cAAP;;AAEA,MAAMC,eAAe,GAAG;AACtB,QAAM,6BADgB;AAEtB,QAAM,iCAFgB;AAGtB,QAAM,gCAHgB;AAItB,QAAM,yBAJgB;AAKtB,QAAM,0BALgB;AAMtB,QAAM,+BANgB;AAOtB,QAAM,wBAPgB;AAQtB,QAAM,uBARgB;AAStB,QAAM,kBATgB,CAUtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvDsB,CAAxB;AA0DA,IAAIC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,eAAZ,CAAlB;AAEA,eAAe,SAASI,GAAT,GAAe;AAAA;;AAC5B,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASQ,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAIC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACA,QAAIN,OAAO,GAAGL,eAAe,CAACS,SAAD,CAA7B,CAFgC,CAGhC;;AACA,QAAIJ,OAAO,IAAIO,SAAf,EAA0B;AACxBP,MAAAA,OAAO,GAAG,mCAAV;AACD;;AACDC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD;;AAED,WAASQ,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAIT,OAAO,GAAGL,eAAe,CAACc,KAAD,CAA7B;AACAR,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACQ;AACJ,MAAA,EAAE,EAAC,aADC;AAEJ,MAAA,KAAK,EAAC,0BAFF;AAGJ,MAAA,IAAI,EAAC,kCAHD;AAAA,6BAKJ;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALI;AAAA;AAAA;AAAA;AAAA,YADR,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAO,MAAA,QAAQ,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,sBAAiBF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,EAaGJ,WAAW,CAACc,GAAZ,CAAgB,UAAUD,KAAV,EAAiB;AAChC,0BACE;AACE,QAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,KAAD,CADlC;AAEE,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,OAAO,EAAE,QAA7B;AAAuCC,UAAAA,MAAM,EAAE;AAA/C,SAFT;AAAA,kBAKGJ;AALH,SAGOA,KAHP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CuBV,G;;KAAAA,G","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nconst emojiDictionary = {\n  \"😃\": \"Grinning Face with Big Eyes\",\n  \"😄\": \"Grinning Face with Smiling Eyes\",\n  \"😁\": \"Beaming Face with Smiling Eyes\",\n  \"😆\": \"Grinning Squinting Face\",\n  \"😅\": \"Grinning Face with Sweat\",\n  \"🤣\": \"Rolling on the Floor Laughing\",\n  \"😂\": \"Face with Tears of Joy\",\n  \"🙂\": \"Slightly Smiling Face\",\n  \"🙃\": \"Upside-Down Face\"\n  // 😉 Winking Face\"\n  // 😊 Smiling Face with Smiling Eyes\n  // 😇 Smiling Face with Halo\n  // 🥰 Smiling Face with Hearts\n  // 😍 Smiling Face with Heart-Eyes\n  // 🤩 Star-Struck\n  // 😘 Face Blowing a Kiss\n  // 😗 Kissing Face\n  // ☺️ Smiling Face\n  // 😚 Kissing Face with Closed Eyes\n  // 😙 Kissing Face with Smiling Eyes\n  // 🥲 Smiling Face with Tear\n  // 😋 Face Savoring Food\n  // 😝 Squinting Face with Tongue\n  // 🤑 Money-Mouth Face\n  // 🤗 Hugging Face\n  // 🤭 Face with Hand Over Mouth\n  // 🤫 Shushing Face\n  // 🤔 Thinking Face\n  // 🤐 Zipper-Mouth Face\n  // 🤨 Face with Raised Eyebrow\n  // 😐 Neutral Face\n  // 😑 Expressionless Face\n  // 😶 Face Without Mouth\n  // 😶‍🌫️ Face in Clouds\n  // 😏 Smirking Face\n  // 😒 Unamused Face\n  // 🙄 Face with Rolling Eyes\n  // 😬 Grimacing Face\n  // 😮‍💨 Face Exhaling\n  // 🤥 Lying Face\n  // 😌 Relieved Face\n  // 😔 Pensive Face\n  // 😪 Sleepy Face\n  // 🤤 Drooling Face\n  // 😴 Sleeping Face\n  // 😷 Face with Medical Mask\n  // 🤒 Face with Thermometer\n  // 🤕 Face with Head-Bandage\n  // 🤢 Nauseated Face\n  // 🤮 Face Vomiting\n  // 🤧 Sneezing Face\n  // 🥵 Hot Face\n  // 🥶 Cold Face\n  // 🥴 Woozy Face\n  // 😵 Dizzy Face\n};\n\nvar knownEmojis = Object.keys(emojiDictionary);\n\nexport default function App() {\n  var [meaning, setMeaning] = useState(\"\");\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n    var meaning = emojiDictionary[userInput];\n    // console.log(meaning);\n    if (meaning == undefined) {\n      meaning = \"We dont have this in our database\";\n    }\n    setMeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n            <a\n        id=\"github-repo\"\n        title=\"Source code for this app\"\n        href=\"https://github.com/bishnoimukesh\"\n      >\n        <i className=\"fab fa-github\"></i>\n      </a>\n      <h1>Emoji Meaning</h1>\n      \n      <input onChange={emojiInputHandler} />\n      <div id=\"mean\"> {meaning} </div>\n      <hr></hr>\n      {knownEmojis.map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}